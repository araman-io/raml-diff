#%RAML 0.8
---
title: GitHub API
version: v3
baseUri: https://api.github.com/
securitySchemes:
  - oauth_2_0:
      description: |
        OAuth2 is a protocol that lets external apps request authorization to private
        details in a user's GitHub account without getting their password. This is
        preferred over Basic Authentication because tokens can be limited to specific
        types of data, and can be revoked by users at any time.
      type: OAuth 2.0
      describedBy:
        headers:
          Authorization:
            description: |
              Used to send a valid OAuth 2 access token. Do not use together with
              the "access_token" query string parameter.
            type: string
        queryParameters:
          access_token:
            description: |
              Used to send a valid OAuth 2 access token. Do not use together with
              the "Authorization" header
            type: string
        responses:
          404:
            description: Unauthorized
      settings:
        authorizationUri: https://github.com/login/oauth/authorize
        accessTokenUri: https://github.com/login/oauth/access_token
        authorizationGrants: [ code ]
        scopes:
          - "user"
          - "user:email"
          - "user:follow"
          - "public_repo"
          - "repo"
          - "repo:status"
          - "delete_repo"
          - "notifications"
          - "gist"
securedBy: [ oauth_2_0 ]
mediaType: application/json
resourceTypes:
  - base:
      get?: &common
        headers:
          X-GitHub-Media-Type:
            description: |
              You can check the current version of media type in responses.
            type: string
          Accept:
            description: Is used to set specified media type.
            type: string
          X-RateLimit-Limit:
            type: integer
          X-RateLimit-Remaining:
            type: integer
          X-RateLimit-Reset:
            type: integer
          X-GitHub-Request-Id:
            type: integer
        responses:
          403:
            description: |
              API rate limit exceeded. See http://developer.github.com/v3/#rate-limiting
              for details.
      post?: *common
      patch?: *common
      put?: *common
      delete?: *common
  - item:
      type: base
      get?:
      post?:
      patch?:
      put?:
      delete?:
        responses:
          204:
            description: Item removed.
  - collection:
      type: base
      get?:
      post?:
traits:
  - historical:
      queryParameters:
        since:
          description: |
            Timestamp in ISO 8601 format YYYY-MM-DDTHH:MM:SSZ.
            Only gists updated at or after this time are returned.
          type: string
  - filterable:
      queryParameters:
        filter:
          description: |
             Issues assigned to you / created by you / mentioning you / you're
             subscribed to updates for / All issues the authenticated user can see
          enum:
            - assigned
            - created
            - mentioned
            - subscribed
            - all
          default: all
          required: true
        state:
          enum:
            - open
            - closed
          default: open
          required: true
        labels:
          description: String list of comma separated Label names. Example - bug,ui,@high.
          type: string
          required: true
        sort:
          enum:
            - created
            - updated
            - comments
          default: created
          required: true
        direction:
          enum:
            - asc
            - desc
          default: desc
          required: true
        since:
          description: |
            Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
            Only issues updated at or after this time are returned.
          type: string
# Search
/search:
  /repositories:
    type: collection
    get:
      description: Search repositories.
      queryParameters:
        q:
          description: |
            The search terms. This can be any combination of the supported repository
            search parameters:
            'Search In' Qualifies which fields are searched. With this qualifier you
            can restrict the search to just the repository name, description, readme,
            or any combination of these.
            'Size' Finds repositories that match a certain size (in kilobytes).
            'Forks' Filters repositories based on the number of forks, and/or whether
            forked repositories should be included in the results at all.
            'Created' and 'Last Updated' Filters repositories based on times of
            creation, or when they were last updated.
            'Users or Repositories' Limits searches to a specific user or repository.
            'Languages' Searches repositories based on the language they're written in.
            'Stars' Searches repositories based on the number of stars.
          type: string
          required: true
        sort:
          description: If not provided, results are sorted by best match.
          enum:
            - stars
            - forks
            - updated
        order:
          enum:
            - asc
            - desc
          default: desc
      responses:
        200:
          body:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "type": "object",
                  "properties": {
                      "total_count": {
                          "type": "integer"
                      },
                      "items": [
                          {
                              "properties": {
                                  "id": {
                                      "type": "integer"
                                  },
                                  "name": {
                                      "type": "string"
                                  },
                                  "full_name": {
                                      "type": "string"
                                  },
                                  "owner": {
                                      "properties": {
                                          "login": {
                                              "type": "string"
                                          },
                                          "id": {
                                              "type": "integer"
                                          },
                                          "avatar_url": {
                                              "type": "string"
                                          },
                                          "gravatar_id": {
                                              "type": "string"
                                          },
                                          "url": {
                                              "type": "string"
                                          },
                                          "received_events_url": {
                                              "type": "string"
                                          },
                                          "type": {
                                              "type": "string"
                                          }
                                      },
                                      "type": "object"
                                  },
                                  "private": {
                                      "type": "boolean"
                                  },
                                  "html_url": {
                                      "type": "string"
                                  },
                                  "description": {
                                      "type": "string"
                                  },
                                  "fork": {
                                      "type": "boolean"
                                  },
                                  "url": {
                                      "type": "string"
                                  },
                                  "created_at": {
                                      "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                                      "type": "string"
                                  },
                                  "updated_at": {
                                      "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                                      "type": "string"
                                  },
                                  "pushed_at": {
                                      "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                                      "type": "string"
                                  },
                                  "homepage": {
                                      "type": "string"
                                  },
                                  "size": {
                                      "type": "integer"
                                  },
                                  "watchers_count": {
                                      "type": "integer"
                                  },
                                  "language": {
                                      "type": "string"
                                  },
                                  "forks_count": {
                                      "type": "integer"
                                  },
                                  "open_issues_count": {
                                      "type": "integer"
                                  },
                                  "forks": {
                                      "type": "integer"
                                  },
                                  "open_issues": {
                                      "type": "integer"
                                  },
                                  "watchers": {
                                      "type": "integer"
                                  },
                                  "master_branch": {
                                      "type": "string"
                                  },
                                  "default_branch": {
                                      "type": "string"
                                  },
                                  "score": {
                                      "type": "number"
                                  }
                              },
                              "type": "object"
                          }
                      ],
                      "type": "array"
                  }
              }
            example: |
              {
                "total_count": 40,
                "items": [
                  {
                    "id": 3081286,
                    "name": "Tetris",
                    "full_name": "dtrupenn/Tetris",
                    "owner": {
                      "login": "dtrupenn",
                      "id": 872147,
                      "avatar_url": "https://secure.gravatar.com/avatar/e7956084e75f239de85d3a31bc172ace?d=https://a248.e.akamai.net/assets.github.com/images/gravatars/gravatar-user-420.png",
                      "gravatar_id": "e7956084e75f239de85d3a31bc172ace",
                      "url": "https://api.github.com/users/dtrupenn",
                      "received_events_url": "https://api.github.com/users/dtrupenn/received_events",
                      "type": "User"
                    },
                    "private": false,
                    "html_url": "https://github.com/dtrupenn/Tetris",
                    "description": "A C implementation of Tetris using Pennsim through LC4",
                    "fork": false,
                    "url": "https://api.github.com/repos/dtrupenn/Tetris",
                    "created_at": "2012-01-01T00:31:50Z",
                    "updated_at": "2013-01-05T17:58:47Z",
                    "pushed_at": "2012-01-01T00:37:02Z",
                    "homepage": "",
                    "size": 524,
                    "watchers_count": 1,
                    "language": "Assembly",
                    "forks_count": 0,
                    "open_issues_count": 0,
                    "forks": 0,
                    "open_issues": 0,
                    "watchers": 1,
                    "master_branch": "master",
                    "default_branch": "master",
                    "score": 10.309712
                  }
                ]
              }